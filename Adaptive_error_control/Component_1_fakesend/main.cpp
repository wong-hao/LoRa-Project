#include "header_1_1.h"

extern int sock_up;

int main() {

    int i = create_up_socket();
    if (i == -1) abort();

    char bufferchar类型的PHYPayload

    int buff_index = strlen(buffer) / 2;

    uint8_t buffer_uint[BUF_SIZE] = {0};
    Char2Uint(buffer, buffer_uint);
    char *buffer2 = (char *) (buffer_uint + 12);

    /*测试程序
    puts(buffer2);
    */

    uint8_t *buffer2_uint = (uint8_t *) (buffer2 - 12);


    send(sock_up, (void *) buffer2_uint, buff_index, 0);
    return 0;
}
