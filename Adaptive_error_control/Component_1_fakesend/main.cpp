#include "header_1_1.h"

extern int sock_up;

int main() {

    int i = create_up_socket();
    if (i==-1) abort();

    char buffer[BUF_SIZE] = "026973000016C001FF10D3F67B227278706B223A5B7B226A766572223A312C22746D7374223A323733383430352C2274696D65223A22323032312D30342D30345431313A32363A34312E3030303030303030305A222C22746D6D73223A313330313537303830313030302C226368616E223A322C2272666368223A302C2266726571223A3438362E3730303030302C226D6964223A20382C2273746174223A312C226D6F6475223A224C4F5241222C2264617472223A225346374257313235222C22636F6472223A22342F35222C227273736973223A2D31362C226C736E72223A31332E382C22666F6666223A2D3234322C2272737369223A2D31362C2273697A65223A31382C2264617461223A225141515442436141434141437A614D53757046414A546B61227D5D7D"; //char类型的PHYPayload

    int buff_index = strlen(buffer) / 2;

    uint8_t  buffer_uint[BUF_SIZE] = { 0 };
    Char2Uint(buffer, buffer_uint);
    char* buffer2 = (char*)(buffer_uint + 12);

	/*测试程序
    puts(buffer2);
    */
	
    uint8_t* buffer2_uint = (uint8_t*)(buffer2 - 12);


    send(sock_up, (void*)buffer2_uint, buff_index, 0);
    return 0;
}

